diff --git a/RepositoryExternal.mk b/RepositoryExternal.mk
index 9cba1af4cb40..58e2e417068c 100644
--- a/RepositoryExternal.mk
+++ b/RepositoryExternal.mk
@@ -341,8 +341,19 @@ define gb_LinkTarget__use_zlib
 $(call gb_LinkTarget_add_defs,$(1),\
 	-DSYSTEM_ZLIB \
 )
+
+ifeq ($(OS),WNT)
+$(call gb_LinkTarget_set_include,$(1),\
+    $$(INCLUDE) \
+	$(ZLIB_CFLAGS) \
+)
+$(call gb_LinkTarget_add_libs,$(1),$(ZLIB_LIBS))
+
+else
 $(call gb_LinkTarget_add_libs,$(1),-lz)
 
+endif
+
 endef
 
 # nothing on system
@@ -389,6 +400,11 @@ endif # SYSTEM_ZLIB
 ifneq ($(SYSTEM_LIBJPEG),)
 
 define gb_LinkTarget__use_libjpeg
+
+$(call gb_LinkTarget_set_include,$(1),\
+    $$(INCLUDE) \
+	$(LIBJPEG_CFLAGS) \
+)
 $(call gb_LinkTarget_add_libs,$(1),$(LIBJPEG_LIBS))
 $(call gb_LinkTarget_set_ldflags,$(1),\
 	$$(filter-out -L/usr/lib/jvm%,$$(T_LDFLAGS)) \
@@ -571,8 +587,6 @@ endef
 endif # SYSTEM_HUNSPELL
 
 
-ifneq ($(SYSTEM_BOOST),)
-
 define gb_LinkTarget__use_boost_lib
 $(call gb_LinkTarget_set_include,$(1),\
 	$$(INCLUDE) \
@@ -628,72 +642,6 @@ endef
 
 gb_ExternalProject__use_boost_headers:=
 
-else # !SYSTEM_BOOST
-
-define gb_LinkTarget__use_boost_lib
-$(call gb_LinkTarget_add_defs,$(1),\
-	-DBOOST_ALL_NO_LIB \
-)
-
-$(call gb_LinkTarget_use_static_libraries,$(1),$(2))
-
-endef
-
-define gb_LinkTarget__use_boost_locale
-$(call gb_LinkTarget__use_boost_lib,$(1),boost_locale)
-$(call gb_LinkTarget_add_libs,$(1),\
-	$(if $(filter $(OS),MACOSX),-liconv) \
-)
-
-endef
-
-define gb_LinkTarget__use_boost_date_time
-$(call gb_LinkTarget__use_boost_lib,$(1),boost_date_time)
-
-endef
-
-define gb_LinkTarget__use_boost_filesystem
-$(call gb_LinkTarget__use_boost_lib,$(1),boost_filesystem)
-
-endef
-
-define gb_ExternalProject__use_boost_filesystem
-$(call gb_ExternalProject_use_static_libraries,$(1),boost_filesystem)
-endef
-
-define gb_LinkTarget__use_boost_iostreams
-$(call gb_LinkTarget__use_boost_lib,$(1),boost_iostreams)
-
-endef
-
-define gb_ExternalProject__use_boost_iostreams
-$(call gb_ExternalProject_use_static_libraries,$(1),boost_iostreams)
-endef
-
-define gb_LinkTarget__use_boost_system
-$(call gb_LinkTarget__use_boost_lib,$(1),boost_system)
-
-endef
-
-define gb_ExternalProject__use_boost_system
-$(call gb_ExternalProject_use_static_libraries,$(1),boost_system)
-endef
-
-define gb_LinkTarget__use_boost_headers
-$(call gb_LinkTarget_use_unpacked,$(1),boost)
-$(call gb_LinkTarget_set_include,$(1),\
-	$(BOOST_CPPFLAGS) \
-	$$(INCLUDE) \
-)
-
-endef
-
-define gb_ExternalProject__use_boost_headers
-$(call gb_ExternalProject_use_unpacked,$(1),boost)
-
-endef
-
-endif # SYSTEM_BOOST
 
 
 ifneq ($(SYSTEM_LIBCMIS),)
@@ -3037,17 +2985,19 @@ ifneq ($(SYSTEM_POSTGRESQL),)
 define gb_LinkTarget__use_postgresql
 
 $(call gb_LinkTarget_set_include,$(1),\
-	$(POSTGRESQL_INC) \
+	$(POSTGRESQL_CFLAGS) \
 	$$(INCLUDE) \
 )
 
+ifeq ($(OS),WNT)
+$(call gb_LinkTarget_add_libs,$(1),$(POSTGRESQL_LIBS))
+
+else
 $(call gb_LinkTarget_add_libs,$(1),\
 	-lpq \
 )
 
-$(call gb_LinkTarget_add_ldflags,$(1),\
-	$(POSTGRESQL_LIB) \
-)
+endif
 
 endef
 
diff --git a/configure.ac b/configure.ac
index 2c4a018b0dd8..8039c3f5d541 100644
--- a/configure.ac
+++ b/configure.ac
@@ -8254,10 +8262,14 @@ AC_MSG_CHECKING([which zlib to use])
 if test "$with_system_zlib" = "yes"; then
     AC_MSG_RESULT([external])
     SYSTEM_ZLIB=TRUE
-    AC_CHECK_HEADER(zlib.h, [],
-        [AC_MSG_ERROR(zlib.h not found. install zlib)], [])
-    AC_CHECK_LIB(z, deflate, [ ZLIB_LIBS=-lz ],
-        [AC_MSG_ERROR(zlib not found or functional)], [])
+    if test "$build_os" = "cygwin"; then
+        AC_MSG_NOTICE([cygwin - zlib system skip check])
+    else
+        AC_CHECK_HEADER(zlib.h, [],
+            [AC_MSG_ERROR(zlib.h not found. install zlib)], [])
+        AC_CHECK_LIB(z, deflate, [ ZLIB_LIBS=-lz ],
+            [AC_MSG_ERROR(zlib not found or functional)], [])
+    fi
 else
     AC_MSG_RESULT([internal])
     SYSTEM_ZLIB=
@@ -8276,10 +8288,14 @@ AC_MSG_CHECKING([which libjpeg to use])
 if test "$with_system_jpeg" = "yes"; then
     AC_MSG_RESULT([external])
     SYSTEM_LIBJPEG=TRUE
-    AC_CHECK_HEADER(jpeglib.h, [ LIBJPEG_CFLAGS= ],
-        [AC_MSG_ERROR(jpeg.h not found. install libjpeg)], [])
-    AC_CHECK_LIB(jpeg, jpeg_resync_to_restart, [ LIBJPEG_LIBS="-ljpeg" ],
-        [AC_MSG_ERROR(jpeg library not found or functional)], [])
+    if test "$build_os" = "cygwin"; then
+        AC_MSG_NOTICE([cygwin - LIBJPEG SKIP CHECK])
+    else
+        AC_CHECK_HEADER(jpeglib.h, [ LIBJPEG_CFLAGS= ],
+            [AC_MSG_ERROR(jpeg.h not found. install libjpeg)], [])
+        AC_CHECK_LIB(jpeg, jpeg_resync_to_restart, [ LIBJPEG_LIBS="-ljpeg" ],
+            [AC_MSG_ERROR(jpeg library not found or functional)], [])
+    fi
 else
     SYSTEM_LIBJPEG=
     AC_MSG_RESULT([internal, libjpeg-turbo])
@@ -8930,24 +8954,28 @@ dnl By now enable_python should be "system", "internal" or "no"
 case $enable_python in
 system)
     SYSTEM_PYTHON=TRUE
+    if test "$build_os" = "cygwin"; then
+        AC_MSG_RESULT([cygwin skip - check python cflags])
+        AC_DEFINE_UNQUOTED([PYTHON_VERSION_STRING], [L"${PYTHON_VERSION}"])
+    else
+        if test "x$ac_cv_header_Python_h" != "xyes"; then
+            AC_MSG_ERROR([Python headers not found. You probably want to set both the PYTHON_CFLAGS and PYTHON_LIBS environment variables.])
+        fi
 
-    if test "x$ac_cv_header_Python_h" != "xyes"; then
-       AC_MSG_ERROR([Python headers not found. You probably want to set both the PYTHON_CFLAGS and PYTHON_LIBS environment variables.])
-    fi
-
-    AC_LANG_PUSH(C)
-    CFLAGS="$CFLAGS $PYTHON_CFLAGS"
-    AC_MSG_CHECKING([for correct python library version])
-       AC_RUN_IFELSE([AC_LANG_SOURCE([[
-#include <Python.h>
+        AC_LANG_PUSH(C)
+        CFLAGS="$CFLAGS $PYTHON_CFLAGS"
+        AC_MSG_CHECKING([for correct python library version])
+        AC_RUN_IFELSE([AC_LANG_SOURCE([[
+    #include <Python.h>
 
-int main(int argc, char **argv) {
-   if ((PY_MAJOR_VERSION == 3 && PY_MINOR_VERSION >= 3)) return 0;
-   else return 1;
-}
-       ]])],[AC_MSG_RESULT([ok])],[AC_MSG_ERROR([Python >= 3.3 is needed when building with Python 3])],[AC_MSG_RESULT([skipped; cross-compiling])])
-    CFLAGS=$save_CFLAGS
-    AC_LANG_POP(C)
+    int main(int argc, char **argv) {
+    if ((PY_MAJOR_VERSION == 3 && PY_MINOR_VERSION >= 3)) return 0;
+    else return 1;
+    }
+        ]])],[AC_MSG_RESULT([ok])],[AC_MSG_ERROR([Python >= 3.3 is needed when building with Python 3])],[AC_MSG_RESULT([skipped; cross-compiling])])
+        CFLAGS=$save_CFLAGS
+        AC_LANG_POP(C)
+    fi
 
     dnl FIXME Check if the Python library can be linked with, too?
     ;;
@@ -9189,12 +9235,17 @@ if test "x$enable_postgresql_sdbc" != "xno"; then
             POSTGRESQL_INC=-I$(${PGCONFIG} --includedir)
             POSTGRESQL_LIB="-L$(${PGCONFIG} --libdir)"
         else
-            PKG_CHECK_MODULES(POSTGRESQL, libpq, [
-              POSTGRESQL_INC=$POSTGRESQL_CFLAGS
-              POSTGRESQL_LIB=$POSTGRESQL_LIBS
-            ],[
-              AC_MSG_ERROR([pg_config or 'pkg-config libpq' needed; set PGCONFIG if not in PATH])
-            ])
+            if test $build_os = cygwin; then
+                POSTGRESQL_INC=$POSTGRESQL_CFLAGS
+                POSTGRESQL_LIB=$POSTGRESQL_LIBS
+            else
+                PKG_CHECK_MODULES(POSTGRESQL, libpq, [
+                POSTGRESQL_INC=$POSTGRESQL_CFLAGS
+                POSTGRESQL_LIB=$POSTGRESQL_LIBS
+                ],[
+                AC_MSG_ERROR([pg_config or 'pkg-config libpq' needed; set PGCONFIG if not in PATH])
+                ])
+            fi
         fi
         FilterLibs "${POSTGRESQL_LIB}"
         POSTGRESQL_LIB="${filteredlibs}"
@@ -9303,9 +9354,13 @@ if test "x$enable_postgresql_sdbc" != "xno"; then
         save_LIBS=$LIBS
         CPPFLAGS="${CPPFLAGS} ${POSTGRESQL_INC}"
         LIBS="${LIBS} ${POSTGRESQL_LIB}"
-        AC_CHECK_HEADER([libpq-fe.h], [], [AC_MSG_ERROR([libpq-fe.h is needed])], [])
-        AC_CHECK_LIB([pq], [PQconnectdbParams], [:],
-            [AC_MSG_ERROR(libpq not found or too old. Need >= 9.0)], [])
+        if test "$build_os" = "cygwin"; then
+            AC_MSG_NOTICE([cygwin system - skip PostgreSQL check])
+        else
+            AC_CHECK_HEADER([libpq-fe.h], [], [AC_MSG_ERROR([libpq-fe.h is needed])], [])
+            AC_CHECK_LIB([pq], [PQconnectdbParams], [:],
+                [AC_MSG_ERROR(libpq not found or too old. Need >= 9.0)], [])
+        fi
         CFLAGS=$save_CFLAGS
         CPPFLAGS=$save_CPPFLAGS
         LIBS=$save_LIBS
@@ -9320,6 +9375,8 @@ AC_SUBST(GSSAPI_LIBS)
 AC_SUBST(KRB5_LIBS)
 AC_SUBST(BUILD_POSTGRESQL_SDBC)
 AC_SUBST(SYSTEM_POSTGRESQL)
+AC_SUBST(POSTGRESQL_CFLAGS)
+AC_SUBST(POSTGRESQL_LIBS)
 AC_SUBST(POSTGRESQL_INC)
 AC_SUBST(POSTGRESQL_LIB)
 
@@ -9497,23 +9554,28 @@ AC_MSG_CHECKING([which boost to use])
 if test "$with_system_boost" = "yes"; then
     AC_MSG_RESULT([external])
     SYSTEM_BOOST=TRUE
-    AX_BOOST_BASE([1.66],,[AC_MSG_ERROR([no suitable Boost found])])
-    AX_BOOST_DATE_TIME
-    AX_BOOST_FILESYSTEM
-    AX_BOOST_IOSTREAMS
-    AX_BOOST_LOCALE
-    AC_LANG_PUSH([C++])
-    save_CXXFLAGS=$CXXFLAGS
-    CXXFLAGS="$CXXFLAGS $BOOST_CPPFLAGS $CXXFLAGS_CXX11"
-    AC_CHECK_HEADER(boost/shared_ptr.hpp, [],
-       [AC_MSG_ERROR(boost/shared_ptr.hpp not found. install boost)], [])
-    AC_CHECK_HEADER(boost/spirit/include/classic_core.hpp, [],
-       [AC_MSG_ERROR(boost/spirit/include/classic_core.hpp not found. install boost >= 1.36)], [])
-    CXXFLAGS=$save_CXXFLAGS
-    AC_LANG_POP([C++])
-    # this is in m4/ax_boost_base.m4
-    FilterLibs "${BOOST_LDFLAGS}"
-    BOOST_LDFLAGS="${filteredlibs}"
+    if test "$build_os" = "cygwin" ; then
+
+        AC_MSG_RESULT([Cygwin boost system $BOOST_SYSTEM_LIB])
+    else  
+        AX_BOOST_BASE(1.47)
+        AX_BOOST_DATE_TIME
+        AX_BOOST_FILESYSTEM
+        AX_BOOST_IOSTREAMS
+        AX_BOOST_LOCALE
+        AC_LANG_PUSH([C++])
+        save_CXXFLAGS=$CXXFLAGS
+        CXXFLAGS="$CXXFLAGS $BOOST_CPPFLAGS $CXXFLAGS_CXX11"
+        AC_CHECK_HEADER(boost/shared_ptr.hpp, [],
+        [AC_MSG_ERROR(boost/shared_ptr.hpp not found. install boost)], [])
+        AC_CHECK_HEADER(boost/spirit/include/classic_core.hpp, [],
+        [AC_MSG_ERROR(boost/spirit/include/classic_core.hpp not found. install boost >= 1.36)], [])
+        CXXFLAGS=$save_CXXFLAGS
+        AC_LANG_POP([C++])
+        # this is in m4/ax_boost_base.m4
+        FilterLibs "${BOOST_LDFLAGS}"
+        BOOST_LDFLAGS="${filteredlibs}"
+    fi
 else
     AC_MSG_RESULT([internal])
     BUILD_TYPE="$BUILD_TYPE BOOST"
diff --git a/connectivity/Library_postgresql-sdbc-impl.mk b/connectivity/Library_postgresql-sdbc-impl.mk
index c372f3f0c6f6..a014b4eb0866 100644
--- a/connectivity/Library_postgresql-sdbc-impl.mk
+++ b/connectivity/Library_postgresql-sdbc-impl.mk
@@ -64,6 +64,15 @@ $(eval $(call gb_Library_add_libs,postgresql-sdbc-impl,\
 ))
 
 endif
+
+else # SYSTEM_POSTGRESQL=TRUE
+$(call gb_LinkTarget_add_libs,postgresql-sdbc-impl,$(POSTGRESQL_LIBS))
+
+$(call gb_LinkTarget_set_include,postgresql-sdbc-impl,\
+	$(POSTGRESQL_CFLAGS) \
+	$$(INCLUDE) \
+)
+
 endif
 
 $(eval $(call gb_Library_set_componentfile,postgresql-sdbc-impl,connectivity/source/drivers/postgresql/postgresql-sdbc-impl))
diff --git a/external/liblangtag/ExternalProject_liblangtag.mk b/external/liblangtag/ExternalProject_liblangtag.mk
index 060c6f3601a8..b93774c1c750 100644
--- a/external/liblangtag/ExternalProject_liblangtag.mk
+++ b/external/liblangtag/ExternalProject_liblangtag.mk
@@ -35,7 +35,7 @@ $(call gb_ExternalProject_get_state_target,liblangtag,build):
 				$(if $(call gb_Module__symbols_enabled,liblangtag),$(gb_DEBUGINFO_FLAGS))' \
 		$(if $(CROSS_COMPILING),--build=$(BUILD_PLATFORM) --host=$(HOST_PLATFORM) "ac_cv_va_copy=no") \
 		LIBXML2_CFLAGS="$(LIBXML_CFLAGS)" \
-		LIBXML2_LIBS="$(if $(filter WNT,$(OS)),-L$(call gb_UnpackedTarball_get_dir,libxml2)/win32/bin.msvc -llibxml2,$(LIBXML_LIBS))" \
+		LIBXML2_LIBS="$(LIBXML_LIBTOOL_LIBS)" \
 		$(if $(filter MACOSX,$(OS)),--prefix=/@.__________________________________________________URELIB) \
 		$(if $(filter-out LINUX FREEBSD,$(OS)),,LDFLAGS="-Wl$(COMMA)-z$(COMMA)origin -Wl$(COMMA)-rpath,\\"\$$\$$ORIGIN) \
 		$(if $(filter-out SOLARIS,$(OS)),,LDFLAGS="-Wl$(COMMA)-z$(COMMA)origin -Wl$(COMMA)-R$(COMMA)\\"\$$\$$ORIGIN) \
diff --git a/external/poppler/StaticLibrary_poppler.mk b/external/poppler/StaticLibrary_poppler.mk
index 8bf9f528ee9e..6a2f8e2c2883 100644
--- a/external/poppler/StaticLibrary_poppler.mk
+++ b/external/poppler/StaticLibrary_poppler.mk
@@ -20,6 +20,7 @@ $(eval $(call gb_StaticLibrary_set_include,poppler,\
 	-I$(WORKDIR)/UnpackedTarball/poppler/fofi \
 	-I$(WORKDIR)/UnpackedTarball/poppler/goo \
 	-I$(WORKDIR)/UnpackedTarball/poppler/poppler \
+	$(LIBJPEG_CFLAGS) \
 	$$(INCLUDE) \
 ))
 
diff --git a/sdext/Executable_xpdfimport.mk b/sdext/Executable_xpdfimport.mk
index 360358d450d2..6487b81b90e5 100644
--- a/sdext/Executable_xpdfimport.mk
+++ b/sdext/Executable_xpdfimport.mk
@@ -16,6 +16,18 @@ $(eval $(call gb_Executable_use_externals,xpdfimport,\
     zlib \
 ))
 
+ifneq ($(SYSTEM_ZLIB),)
+    $(call gb_LinkTarget_add_libs,$(1),$(ZLIB_LIBS))
+endif
+
+ifneq ($(SYSTEM_LIBJPEG),)
+    $(call gb_LinkTarget_add_libs,$(1),$(LIBJPEG_LIBS))
+endif
+
+ifneq ($(SYSTEM_LIBPNG),)
+    $(call gb_LinkTarget_add_libs,$(1),$(LIBPNG_LIBS))
+endif
+
 $(eval $(call gb_Executable_add_exception_objects,xpdfimport,\
     sdext/source/pdfimport/xpdfwrapper/pdfioutdev_gpl \
     sdext/source/pdfimport/xpdfwrapper/pnghelper \
diff --git a/shell/Library_shlxthdl.mk b/shell/Library_shlxthdl.mk
index 4207c76037b1..43f9cd102616 100644
--- a/shell/Library_shlxthdl.mk
+++ b/shell/Library_shlxthdl.mk
@@ -11,6 +11,7 @@ $(eval $(call gb_Library_Library,shlxthdl))
 
 $(eval $(call gb_Library_set_include,shlxthdl,\
 	-I$(SRCDIR)/shell/inc \
+	$(ZLIB_CFLAGS) \
 	$$(INCLUDE) \
 ))
 
@@ -25,6 +26,14 @@ $(eval $(call gb_Library_use_externals,shlxthdl,\
 	zlib \
 ))
 
+ifneq ($(SYSTEM_ZLIB),)
+    $(call gb_LinkTarget_add_libs,$(1),$(ZLIB_LIBS))
+endif
+
+ifneq ($(SYSTEM_LIBPNG),)
+    $(call gb_LinkTarget_add_libs,$(1),$(LIBPNG_LIBS))
+endif
+
 $(eval $(call gb_Library_use_system_win32_libs,shlxthdl,\
 	advapi32 \
 	comctl32 \
diff --git a/xmlsecurity/Library_xsec_xmlsec.mk b/xmlsecurity/Library_xsec_xmlsec.mk
index bd2cb6abef20..464405a4a7c6 100644
--- a/xmlsecurity/Library_xsec_xmlsec.mk
+++ b/xmlsecurity/Library_xsec_xmlsec.mk
@@ -89,11 +89,17 @@ $(eval $(call gb_Library_add_defs,xsec_xmlsec,\
 	-DXMLSEC_CRYPTO_MSCRYPTO \
 ))
 
+ifeq ($(SYSTEM_XMLSEC),)
 $(eval $(call gb_Library_add_libs,xsec_xmlsec,\
 	$(call gb_UnpackedTarball_get_dir,xmlsec)/win32/binaries/libxmlsec-mscng.lib \
 	$(call gb_UnpackedTarball_get_dir,xmlsec)/win32/binaries/libxmlsec.lib \
 ))
 
+else
+$(eval $(call gb_Library_add_libs,xsec_xmlsec,$(XMLSEC_LIBS)))
+
+endif
+
 $(eval $(call gb_Library_use_system_win32_libs,xsec_xmlsec,\
 	crypt32 \
 	advapi32 \
